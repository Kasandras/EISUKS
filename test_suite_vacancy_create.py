from pages import *
from setup import *
import pytest


class TestSuite:
    """
    Тест на создание вакансий.
    Создаёт вакансии любых типов, в зависмости от выбранного набора входных данных (параметр для json)
    """
    driver = webdriver.Chrome("chromedriver.exe")

    @classmethod
    def setup_class(cls):
        cls.driver.maximize_window()
        cls.driver.get(Links.main_page)
        cls.account = get_data_by_number(load_data("drozdovData")["users"], "accounts", 1)

    @classmethod
    def teardown_class(cls):
        cls.driver.quit()

    def go_to(self, url):
        while self.driver.current_url != url:
            self.driver.get(url)
            sleep(.1)
        print("Переход по ссылке: %s" % url)

    @pytest.mark.parametrize("order", [0, 1, 2, 3, 4, 5])
    def test_vacancy_create(self, order):
        data = load_data("drozdovData")
        vacancy = data["vacancy"]["type"][order]

        LoginPage(self.driver).login(self.account["username"], self.account["password"], self.account["full_name"])
        self.go_to(Links.vacancy_list)
        page = VacancyCreatePage(self.driver)
        page.click_by_text("Создать")
        sleep(1)
        page.type_vacancy(vacancy["type_vacancy"])
        page.organization(vacancy["organization"])
        page.wait_for_text_appear("Структурное подразделение")
        if order == 0:
            page.is_competition(vacancy["is_competition"])
            sleep(1)
            page.post_is_competition.structural_unit(vacancy["structural_unit"])
            page.post_is_competition.sub_structural(vacancy["sub_structural"])
            page.post_is_competition.staff_unit(vacancy["staff_unit"])
            page.post_is_competition.work_type(vacancy["work_type"])
            page.work_type_other_text(vacancy["work_type_other_text"])
            page.post_is_competition.position_category(vacancy["position_category"])
            page.post_is_competition.position_group(vacancy["position_group"])
            page.post_is_competition.okato_region(vacancy["okato_region"])
            page.post_is_competition.okato_area(vacancy["okato_area"])
            page.salary_from(vacancy["salary_from"])
            page.salary_to(vacancy["salary_to"])
            sleep(1)
            page.post_is_competition.business_trip(vacancy["business_trip"])
            page.post_is_competition.work_day(vacancy["work_day"])
            page.post_is_competition.work_schedule(vacancy["work_schedule"])
            page.post_is_competition.work_contract(vacancy["work_contract"])
            page.social_package_text(vacancy["social_package_text"])
            page.post_is_competition.social_package_files(vacancy["social_package_files"])
            sleep(1)
            page.additional_position_info_text(vacancy["additional_position_info_text"])
            page.post_is_competition.additional_position_info_file(vacancy["additional_position_info_file"])
            page.scroll_to_top()
            page.click_by_text("Должностные обязанности")
            page.job_responsibility_text(vacancy["job_responsibility_text"])
            page.post_is_competition.job_responsibility_files(vacancy["job_responsibility_files"])
            page.post_is_competition.position_rules_files(vacancy["position_rules_files"])
            page.click_by_text("Квалификационные требования")
            page.post_is_competition.education_level(vacancy["education_level"])
            page.post_is_competition.government_experience(vacancy["government_experience"])
            page.post_is_competition.professional_experience(vacancy["professional_experience"])
            page.knowledge_description_text(vacancy["knowledge_description_text"])
            page.post_is_competition.knowledge_description_files(vacancy["knowledge_description_files"])
            page.additional_requirements(vacancy["additional_requirements"])
            page.post_is_competition.test(vacancy["test"])
            page.click_by_text("Документы", 2)
            page.announcement_date()
            page.expiry_date(vacancy["expiry_date"])
            page.registration_address(vacancy["registration_address"])
            page.registration_time(vacancy["registration_time"])
            page.click_by_text("Добавить")
            page.post_is_competition.document_type(vacancy["document_type"])
            page.description(vacancy["description"])
            page.post_is_competition.template_file(vacancy["template_file"])
            sleep(1)
            page.click_by_text("Добавить", 2)
            sleep(1)
            page.set_checkbox_by_order(3, False)
            page.sel()
            page.delete()
            sleep(1)
            page.click_by_text("Контакты")
            page.wait_for_text_appear("Почтовый адрес")
            page.post_is_competition.organization_address(vacancy["organization_address"])
            page.address_mail(vacancy["address_mail"])
            page.phone(vacancy["phone"])
            page.phone2(vacancy["phone2"])
            page.phone3(vacancy["phone3"])
            page.email(vacancy["email"])
            page.contact_person_other(vacancy["contact_person_other"])
            page.web(vacancy["web"])
            page.additional_info_text(vacancy["additional_info_text"])
            sleep(0.5)
            page.post_is_competition.additional_info_files(vacancy["additional_info_files"])
        if order == 1:
            page.reason(vacancy["reason"])
            page.post_is_competition.structural_unit(vacancy["structural_unit"])
            page.post_is_competition.sub_structural(vacancy["sub_structural"])
            page.post_is_competition.staff_unit(vacancy["staff_unit"])
            page.post_is_competition.work_type(vacancy["work_type"])
            page.work_type_other_text(vacancy["work_type_other_text"])
            page.post_is_competition.position_category(vacancy["position_category"])
            page.post_is_competition.position_group(vacancy["position_group"])
            page.post_is_competition.okato_region(vacancy["okato_region"])
            page.post_is_competition.okato_area(vacancy["okato_area"])
            page.salary_from(vacancy["salary_from"])
            page.salary_to(vacancy["salary_to"])
            sleep(1)
            page.post_is_competition.business_trip(vacancy["business_trip"])
            page.post_is_competition.work_day(vacancy["work_day"])
            page.post_is_competition.work_schedule(vacancy["work_schedule"])
            page.post_is_competition.work_contract(vacancy["work_contract"])
            page.social_package_text(vacancy["social_package_text"])
            page.post_is_competition.social_package_files(vacancy["social_package_files"])
            sleep(1)
            page.additional_position_info_text(vacancy["additional_position_info_text"])
            page.post_is_competition.additional_position_info_file(vacancy["additional_position_info_file"])
            page.scroll_to_top()
            page.click_by_text("Должностные обязанности")
            page.job_responsibility_text(vacancy["job_responsibility_text"])
            page.post_is_competition.job_responsibility_files(vacancy["job_responsibility_files"])
            page.post_is_competition.position_rules_files(vacancy["position_rules_files"])
            page.click_by_text("Квалификационные требования")
            page.post_is_competition.education_level(vacancy["education_level"])
            page.post_is_competition.government_experience(vacancy["government_experience"])
            page.post_is_competition.professional_experience(vacancy["professional_experience"])
            page.knowledge_description_text(vacancy["knowledge_description_text"])
            page.post_is_competition.knowledge_description_files(vacancy["knowledge_description_files"])
            page.additional_requirements(vacancy["additional_requirements"])
            page.post_is_competition.test(vacancy["test"])
            page.click_by_text("Документы", 2)
            page.announcement_date()
            page.expiry_date(vacancy["expiry_date"])
            page.registration_address(vacancy["registration_address"])
            page.registration_time(vacancy["registration_time"])
            page.click_by_text("Добавить")
            page.post_is_competition.document_type(vacancy["document_type"])
            page.description(vacancy["description"])
            page.post_is_competition.template_file(vacancy["template_file"])
            sleep(1)
            page.click_by_text("Добавить", 2)
            sleep(1)
            page.set_checkbox_by_order(3, False)
            page.sel()
            page.delete()
            sleep(1)
            page.click_by_text("Контакты")
            page.wait_for_text_appear("Почтовый адрес")
            page.post_is_competition.organization_address(vacancy["organization_address"])
            page.address_mail(vacancy["address_mail"])
            page.phone(vacancy["phone"])
            page.phone2(vacancy["phone2"])
            page.phone3(vacancy["phone3"])
            page.email(vacancy["email"])
            page.contact_person_other(vacancy["contact_person_other"])
            page.web(vacancy["web"])
            page.additional_info_text(vacancy["additional_info_text"])
            sleep(0.5)
            page.post_is_competition.additional_info_files(vacancy["additional_info_files"])
        if order == 2:
            page.reserve_post.reserve(vacancy["reserve"])
            page.reserve_post.structural_unit(vacancy["structural_unit"])
            page.reserve_post.sub_structural(vacancy["sub_structural"])
            page.reserve_post.post(vacancy["post"])
            page.reserve_post.work_type(vacancy["work_type"])
            page.work_type_other_text(vacancy["work_type_other_text"])
            page.reserve_post.reserve_group(vacancy["reserve_group"])
            page.reserve_post.okato_region(vacancy["okato_region"])
            page.reserve_post.okato_area(vacancy["okato_area"])
            page.salary_from(vacancy["salary_from"])
            page.salary_to(vacancy["salary_to"])
            sleep(1)
            page.reserve_post.business_trip(vacancy["business_trip"])
            page.reserve_post.work_day(vacancy["work_day"])
            page.reserve_post.work_schedule(vacancy["work_schedule"])
            page.reserve_post.work_contract(vacancy["work_contract"])
            page.social_package_text(vacancy["social_package_text"])
            page.reserve_post.social_package_files(vacancy["social_package_files"])
            page.additional_position_info_text(vacancy["additional_position_info_text"])
            page.reserve_post.additional_position_info_file(vacancy["additional_position_info_file"])
            page.scroll_to_top()
            page.click_by_text("Должностные обязанности")
            page.job_responsibility_text(vacancy["job_responsibility_text"])
            page.reserve_post.job_responsibility_files(vacancy["job_responsibility_files"])
            page.reserve_post.position_rules_files(vacancy["position_rules_files"])
            page.click_by_text("Квалификационные требования")
            page.reserve_post.education_level(vacancy["education_level"])
            page.reserve_post.government_experience(vacancy["government_experience"])
            page.reserve_post.professional_experience(vacancy["professional_experience"])
            page.knowledge_description_text(vacancy["knowledge_description_text"])
            page.reserve_post.knowledge_description_files(vacancy["knowledge_description_files"])
            page.additional_requirements(vacancy["additional_requirements"])
            page.reserve_post.test(vacancy["test"])
            page.click_by_text("Документы", 2)
            page.announcement_date()
            page.expiry_date(vacancy["expiry_date"])
            page.registration_address(vacancy["registration_address"])
            page.registration_time(vacancy["registration_time"])
            page.click_by_text("Добавить")
            page.reserve_post.document_type(vacancy["document_type"])
            page.description(vacancy["description"])
            page.reserve_post.template_file(vacancy["template_file"])
            sleep(1)
            page.click_by_text("Добавить", 2)
            sleep(1)
            page.set_checkbox_by_order(2, False)
            page.sel()
            page.delete()
            sleep(1)
            page.click_by_text("Контакты")
            page.wait_for_text_appear("Почтовый адрес")
            page.reserve_post.organization_address(vacancy["organization_address"])
            page.address_mail(vacancy["address_mail"])
            page.phone(vacancy["phone"])
            page.phone2(vacancy["phone2"])
            page.phone3(vacancy["phone3"])
            page.email(vacancy["email"])
            page.contact_person_other(vacancy["contact_person_other"])
            page.web(vacancy["web"])
            page.additional_info_text(vacancy["additional_info_text"])
            sleep(0.5)
            page.reserve_post.additional_info_files(vacancy["additional_info_files"])
        if order == 3:
            page.reserve_group_posts.reserve(vacancy["reserve"])
            page.reserve_group_posts.structural_unit(vacancy["structural_unit"])
            page.reserve_group_posts.sub_structural(vacancy["sub_structural"])
            page.reserve_group_posts.work_type(vacancy["work_type"])
            page.work_type_other_text(vacancy["work_type_other_text"])
            page.reserve_group_posts.reserve_group(vacancy["reserve_group"])
            page.reserve_group_posts.okato_region(vacancy["okato_region"])
            page.reserve_group_posts.okato_area(vacancy["okato_area"])
            page.salary_from(vacancy["salary_from"])
            page.salary_to(vacancy["salary_to"])
            sleep(1)
            page.reserve_group_posts.business_trip(vacancy["business_trip"])
            page.reserve_group_posts.work_day(vacancy["work_day"])
            page.reserve_group_posts.work_schedule(vacancy["work_schedule"])
            page.reserve_group_posts.work_contract(vacancy["work_contract"])
            page.social_package_text(vacancy["social_package_text"])
            page.reserve_group_posts.social_package_files(vacancy["social_package_files"])
            page.additional_position_info_text(vacancy["additional_position_info_text"])
            page.reserve_group_posts.additional_position_info_file(vacancy["additional_position_info_file"])
            page.scroll_to_top()
            page.click_by_text("Должностные обязанности")
            page.job_responsibility_text(vacancy["job_responsibility_text"])
            page.reserve_group_posts.job_responsibility_files(vacancy["job_responsibility_files"])
            page.reserve_group_posts.position_rules_files(vacancy["position_rules_files"])
            page.click_by_text("Квалификационные требования")
            page.reserve_group_posts.education_level(vacancy["education_level"])
            page.reserve_group_posts.government_experience(vacancy["government_experience"])
            page.reserve_group_posts.professional_experience(vacancy["professional_experience"])
            page.knowledge_description_text(vacancy["knowledge_description_text"])
            page.reserve_group_posts.knowledge_description_files(vacancy["knowledge_description_files"])
            page.additional_requirements(vacancy["additional_requirements"])
            page.reserve_group_posts.test(vacancy["test"])
            page.click_by_text("Документы", 2)
            page.announcement_date()
            page.expiry_date(vacancy["expiry_date"])
            page.registration_address(vacancy["registration_address"])
            page.registration_time(vacancy["registration_time"])
            page.click_by_text("Добавить")
            page.reserve_group_posts.document_type(vacancy["document_type"])
            page.description(vacancy["description"])
            page.reserve_group_posts.template_file(vacancy["template_file"])
            sleep(1)
            page.click_by_text("Добавить", 2)
            sleep(1)
            page.set_checkbox_by_order(2, False)
            page.sel()
            page.delete()
            sleep(1)
            page.click_by_text("Контакты")
            page.wait_for_text_appear("Почтовый адрес")
            page.reserve_group_posts.organization_address(vacancy["organization_address"])
            page.address_mail(vacancy["address_mail"])
            page.phone(vacancy["phone"])
            page.phone2(vacancy["phone2"])
            page.phone3(vacancy["phone3"])
            page.email(vacancy["email"])
            page.contact_person_other(vacancy["contact_person_other"])
            page.web(vacancy["web"])
            page.additional_info_text(vacancy["additional_info_text"])
            sleep(0.5)
            page.reserve_group_posts.additional_info_files(vacancy["additional_info_files"])
        if order == 4:
            page.vacant_study.structural_unit(vacancy["structural_unit"])
            page.vacant_study.sub_structural(vacancy["sub_structural"])
            page.vacant_study.work_type(vacancy["work_type"])
            page.work_type_other_text(vacancy["work_type_other_text"])
            page.vacant_study.position_category(vacancy["position_category"])
            page.vacant_study.position_group(vacancy["position_group"])
            page.vacant_study.okato_region(vacancy["okato_region"])
            page.vacant_study.okato_area(vacancy["okato_area"])
            page.salary_from(vacancy["salary_from"])
            page.salary_to(vacancy["salary_to"])
            sleep(1)
            page.vacant_study.business_trip(vacancy["business_trip"])
            page.vacant_study.work_schedule(vacancy["work_schedule"])
            page.vacant_study.work_day(vacancy["work_day"])
            page.vacant_study.work_contract(vacancy["work_contract"])
            page.social_package_text(vacancy["social_package_text"])
            page.vacant_study.social_package_files(vacancy["social_package_files"])
            page.additional_position_info_text(vacancy["additional_position_info_text"])
            page.vacant_study.additional_position_info_file(vacancy["additional_position_info_file"])
            page.scroll_to_top()
            page.click_by_text("Должностные обязанности")
            page.job_responsibility_text(vacancy["job_responsibility_text"])
            page.vacant_study.job_responsibility_files(vacancy["job_responsibility_files"])
            page.vacant_study.position_rules_files(vacancy["position_rules_files"])
            page.click_by_text("Квалификационные требования")
            page.vacant_study.education_level(vacancy["education_level"])
            page.vacant_study.government_experience(vacancy["government_experience"])
            page.vacant_study.professional_experience(vacancy["professional_experience"])
            page.knowledge_description_text(vacancy["knowledge_description_text"])
            page.vacant_study.knowledge_description_files(vacancy["knowledge_description_files"])
            page.additional_requirements(vacancy["additional_requirements"])
            page.vacant_study.test(vacancy["test"])
            page.click_by_text("Документы", 2)
            page.announcement_date()
            page.expiry_date(vacancy["expiry_date"])
            page.registration_address(vacancy["registration_address"])
            page.registration_time(vacancy["registration_time"])
            page.click_by_text("Добавить")
            page.vacant_study.document_type(vacancy["document_type"])
            page.description(vacancy["description"])
            page.vacant_study.template_file(vacancy["template_file"])
            sleep(1)
            page.click_by_text("Добавить", 2)
            sleep(1)
            page.set_checkbox_by_order(2, False)
            page.sel()
            page.delete()
            sleep(1)
            page.click_by_text("Контакты")
            page.wait_for_text_appear("Почтовый адрес")
            page.vacant_study.organization_address(vacancy["organization_address"])
            page.address_mail(vacancy["address_mail"])
            page.phone(vacancy["phone"])
            page.phone2(vacancy["phone2"])
            page.phone3(vacancy["phone3"])
            page.email(vacancy["email"])
            page.contact_person_other(vacancy["contact_person_other"])
            page.web(vacancy["web"])
            page.additional_info_text(vacancy["additional_info_text"])
            sleep(0.5)
            page.vacant_study.additional_info_files(vacancy["additional_info_files"])
        if order == 5:
            page.vacant_state.structural_unit(vacancy["structural_unit"])
            page.vacant_state.sub_structural(vacancy["sub_structural"])
            page.vacant_state.staff_unit(vacancy["staff_unit"])
            page.vacant_state.work_type(vacancy["work_type"])
            page.work_type_other_text(vacancy["work_type_other_text"])
            page.vacant_state.position_category(vacancy["position_category"])
            page.vacant_state.position_group(vacancy["position_group"])
            page.click_by_text("Должностные обязанности")
            page.job_responsibility_text(vacancy["job_responsibility_text"])
            page.vacant_state.job_responsibility_files(vacancy["job_responsibility_files"])
            page.vacant_state.position_rules_files(vacancy["position_rules_files"])
        page.scroll_to_bottom()
        page.click_by_text("Сохранить")
        page.wait_for_text_appear("Создать")
        assert "Создать" in self.driver.page_source
